
/*
swfClient.call("RegisterDomain", {
   "name": "super-test-from-api",
   "description": "music",
   "workflowExecutionRetentionPeriodInDays": "60"
}, function(err, result) {
   console.log("error", err);
  console.log( result );
})
*/

/*swfClient.call("RegisterActivityType", {
    "domain": "super-test-from-api",
    "name": "activityVerify",
    "version": "1.0",
    "description": "Verify the customer credit",
    "defaultTaskStartToCloseTimeout": "600",
    "defaultTaskHeartbeatTimeout": "120",
    "defaultTaskList": {
        "name": "mainTaskList"
    },
    "defaultTaskScheduleToStartTimeout": "1800",
    "defaultTaskScheduleToCloseTimeout": "5400"
}, function(err, result) {
    console.log("error", err);
   console.log( result );
 })*/



/*
swfClient.call("RegisterWorkflowType",  {
   "domain": "super-test-from-api",
 "name": "customerOrderWorkflow-v2",
 "version": "1.0",
 "description": "Handle customer orders",
 "defaultTaskStartToCloseTimeout": "600",
 "defaultExecutionStartToCloseTimeout": "3600",
 "defaultTaskList":
  {"name": "mainTaskList"},
 "defaultChildPolicy": "TERMINATE"}
   
   , function(err, result) {
   console.log("error", err);
  console.log(JSON.stringify(result));
})
*/




/*
swfClient.call("StartWorkflowExecution",  {
   "domain": "super-test-from-api",
 "workflowId": "SECOND TEST",
 "workflowType":
  {"name": "customerOrderWorkflow",
   "version": "1.0"},
 "taskList":
  {"name": "specialTaskList"},
 "input": "arbitrary-string-that-is-meaningful-to-the-workflow",
 "executionStartToCloseTimeout": "1800",
 "tagList":
  ["music purchase", "digital", "ricoh-the-dog"],
 "taskStartToCloseTimeout": "1800",
 "childPolicy": "TERMINATE"
 }
   
   , function(err, result) {
   console.log("error", err);
  console.log(JSON.stringify(result));
})
*/


/*
swfClient.call("PollForDecisionTask",  {
   "domain": "super-test-from-api",
 "taskList":
  {"name": "specialTaskList"},
 "identity": "Decider01",
 "maximumPageSize": 500,
 "reverseOrder": true}
   
   , function(err, result) {
   console.log("error", err);
  console.log(JSON.stringify(result));
})
*/

/*
swfClient.call("RespondDecisionTaskCompleted",  
{
  "taskToken": "AAAAKgAAAAEAAAAAAAAAATo8ABEd3YN0BceY5kOaki0OPB+ZDgCZM4OZF1m0bu4PJS0eXGmAievmKeY3ZV67QUg5GaBeQd51vPbGo5+gxCgyNSrxzer/2xRE7IpTq/havdaBL9yWLiC4oIGTnuZmIrH+lEdjTi+uLo7ofG1TPnGHtwgIq4uNrtGMmW4lpydTwtR/Yb24J6LmwLxoWQL4wA80DpyXUw4XC9AYAR5nOESAo2q/S4ZgRUsHhZ2NSr7gr12OY6rDvD/myODd54ChPPeOSjHjgWgdtuOZv2dItQXs8W3RlMxACvP0mB351bk3",
  "decisions":[
      {
          "decisionType":"ScheduleActivityTask",
          "scheduleActivityTaskDecisionAttributes":{
              "control":"OPTIONAL_DATA_FOR_DECIDER",
              "activityType":{
                  "name":"activityVerify",
                  "version":"1.0"
              },
              "activityId":"qdfgdqfgdqfg",
              "scheduleToCloseTimeout":"360",
              "taskList":{
                  "name":"CC_TASKS"
              },
              "scheduleToStartTimeout":"60",
              "startToCloseTimeout":"300",
              "heartbeatTimeout":"60",
              "input": "SOME DATA FOR activityVerify"
          }
      }
  ]
}

   
   , function(err, result) {
   console.log("error", err);
  console.log(JSON.stringify(result));
})*/




/*swfClient.call("PollForActivityTask",  {"domain": "super-test-from-api",
    "taskList":
     {"name": "CC_TASKS"},
   "identity": "ChargeCreditCardWorker01"
   }
   
   , function(err, result) {
   console.log("error", err);
  console.log(JSON.stringify(result));
})*/



/*swfClient.call("RespondActivityTaskCompleted",  {
   "taskToken": "AAAAKgAAAAEAAAAAAAAAAfLVPX5/Av8I6F+GQTJRVMC0bh77b1WokQj4GA7zC4UzR4swxadQo5O1iqvxbelHn2FKYNhxZIuMPCkFJeTfwvGqUdcAQMh3uvmMzRT62tqxDBLLESBU2KMevuE/URsxgs2J01If9rmTpspOaYjlzb9gbRSTQwcA+TQwB0/9pX+ZJWHQzC2Vu7Qt7rLTJO3LqUCloQDnXfw31NN1iWq3RXKMeMYdHspVzknc2luw0oO+w0UgAn+/68rQCQeXU4CxcqoPUZEu+vMsACu81t+nO74wGY63gGYlw+KRM069aglY",
   "results": "40"
}
   
   , function(err, result) {
   console.log("error", err);
  console.log(JSON.stringify(result));
})*/


 
 /*
 swfClient.call("GetWorkflowExecutionHistory",  {
    "domain": "super-test-from-api",
  "execution": {
     "workflowId": "SECOND TEST",
     "runId": "b8bb239a-e6c9-48c9-831e-ff6c81e61325"
  }
 }

    , function(err, result) {
    console.log("error", err);
   console.log(JSON.stringify(result));
 })
 */
 
 
 
